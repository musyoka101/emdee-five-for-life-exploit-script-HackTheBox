#!/usr/env python3
import requests
import hashlib
import re
import sys

# Colors to make it look pretty
class bcolors:
	OKBLUE = '\033[94m'
	OKGREEN = '\033[92m'
	FAIL = '\033[91m'
	WARNING = '\033[93m'
	ORANGE='\033[33m'
	ENDC = '\033[0m'

try:
	url = sys.argv[1]

	banner = """
__  __ ____  ____    _____                             _             
|  \/  |  _ \| ___|  | ____|_ __   ___ _ __ _   _ _ __ | |_ ___  _ __ 
| |\/| | | | |___ \  |  _| | '_ \ / __| '__| | | | '_ \| __/ _ \| '__|
| |  | | |_| |___) | | |___| | | | (__| |  | |_| | |_) | || (_) | |   
|_|  |_|____/|____/  |_____|_| |_|\___|_|   \__, | .__/ \__\___/|_|   
  
	
	"""
	print (bcolors.OKBLUE + banner + bcolors.ENDC)

	def emd54life():
		for i in range (10):
			global url
			url = url
			sending_hash = url
			
			sess = requests.session()
			output = sess.get(url, timeout=4).text
			hello = re.search("<h3 align='center'>(.*?)</h3>", output).group(1)
			hashed = hashlib.md5(hello.encode()).hexdigest()
			postdata = {
			"hash" : hashed
			}
			sending = sess.post(sending_hash, data=postdata).text
			flag = re.search("<p align='center'>(.*?)</p><center>", sending).group(1)
			if "HTB" in flag:
				print (bcolors.OKGREEN + "This is the string you are supposed to MD5 encypt: " + hello  + bcolors.ENDC)
				print (bcolors.OKGREEN + "This is the encrypted sample Submitting it shortly: " + hashed + "\n" + bcolors.ENDC)
				print (bcolors.ORANGE + "Here's your Flag Submit to get the points: " + bcolors.WARNING + flag  + bcolors.ENDC)
				break
			else:
				print (bcolors.FAIL + "retrying we didn't get the flag :( \n" + bcolors.ENDC)

	if __name__=="__main__":
		emd54life()
except IndexError:
	print (bcolors.FAIL + "\nMissing one parameter!!!\n\nUsage:\npython3 encrypt.py <URL>" + bcolors.ENDC)
except requests.exceptions.Timeout:
    print (bcolors.FAIL + "A Connection timeout has occured!\n\n\nPlease check the URL then repeat the process" + bcolors.ENDC)
